{"version":3,"sources":["Components/Inbox.js","Components/Spam.js","Components/Important.js","Components/Trash.js","App.js","serviceWorker.js","index.js"],"names":["Inbox","state","bgC","favChang","mail","handleBgC","handleFavChange","setState","List","this","props","data","map","item","index","status","style","backgroundColor","onClick","openEmail","ListItem","alignItems","key","ListItemAvatar","Avatar","alt","src","Image","ListItemText","primary","Fragment","Typography","float","color","SenderName","Mesg","fevorateEmail","favorate","deleteEmail","Divider","React","Component","Spam","paragraph","Important","fevorate","component","variant","Trash","secondary","App","selectedPage","styleA","height","marginLeft","display","emailData","opened","handleFevorate","Index","temp","console","log","handleOpenMail","handleRestore","handleChanges","text","handleDrawer","CssBaseline","AppBar","Toolbar","IconButton","aria-label","edge","noWrap","Drawer","anchor","open","textAlign","button","padding","ListItemIcon","marginTop","restoreEmail","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0021500b.chunk.js","sourcesContent":["import React from \"react\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Divider from \"@material-ui/core/Divider\";\nimport FavFilled from \"@material-ui/icons/Favorite\";\nimport FavOutLined from \"@material-ui/icons/FavoriteBorder\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport Butten from \"@material-ui/core/Button\";\n\nexport default class Inbox extends React.Component {\n  state = {\n    bgC: \"lightgray\",\n    favChang: \"outLined\",\n    mail: {}\n  };\n  handleBgC = () => {};\n  handleFavChange = () => {\n    if (this.state.favChang === \"outLined\") {\n      this.setState({ favChang: \"filled\" });\n    } else {\n      this.setState({ favChang: \"outLined\" });\n    }\n  };\n  render() {\n    return (\n      <div>\n        <List>\n          {this.props.data.map((item, index) => {\n            if (item.status === \"Inbox\") {\n              return (\n                <div\n                  style={{ backgroundColor: this.state.bgC }}\n                  onClick={() => this.props.openEmail(index)}\n                >\n                  <ListItem alignItems=\"flex-start\" key={index}>\n                    <ListItemAvatar>\n                      <Avatar alt=\"Remy Sharp\" src={`./images/${item.Image}`} />\n                    </ListItemAvatar>\n                    <ListItemText\n                      primary={\n                        <React.Fragment>\n                          <Typography\n                            style={{ float: \"left\" }}\n                            color=\"textPrimary\"\n                          >\n                            {`${item.SenderName}     ${item.Mesg}`}\n                          </Typography>\n                        </React.Fragment>\n                      }\n                    />\n                    <Butten onClick={() => this.props.fevorateEmail(index)}>\n                      {item.favorate === true ? <FavFilled /> : <FavOutLined />}\n                    </Butten>\n                    <Butten onClick={() => this.props.deleteEmail(index)}>\n                      <DeleteIcon />\n                    </Butten>\n                  </ListItem>\n                  <Divider />\n                </div>\n              );\n            }\n          })}\n        </List>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\n// import \"./App.css\";\n\nexport default class Spam extends React.Component {\n  state = {};\n  render() {\n    return (\n      <React.Fragment>\n        <Typography paragraph>SPAM</Typography>\n      </React.Fragment>\n    );\n  }\n}\n","import React from \"react\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Typography from \"@material-ui/core/Typography\";\n\nexport default class Important extends React.Component {\n  render() {\n    return (\n      <div>\n        <List>\n          {this.props.data.map((item, index) => {\n            if (item.fevorate) {\n              return (\n                <div>\n                  <ListItem alignItems=\"flex-start\" key={index}>\n                    <ListItemAvatar>\n                      <Avatar alt=\"Remy Sharp\" src={`./images/${item.Image}`} />\n                    </ListItemAvatar>\n                    <ListItemText\n                      primary={\n                        <React.Fragment>\n                          <Typography\n                            component=\"span\"\n                            variant=\"body2\"\n                            color=\"textPrimary\"\n                          >\n                            {`${item.SenderName}    `}\n                          </Typography>\n                          {item.Mesg}\n                        </React.Fragment>\n                      }\n                    />\n                  </ListItem>\n                </div>\n              );\n            }\n          })}\n        </List>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport RestoreIcon from \"@material-ui/icons/Restore\";\n\nexport default class Trash extends React.Component {\n  render() {\n    return (\n      <div>\n        <List>\n          {this.props.data.map((item, index) => {\n            if (item.status === \"Trash\") {\n              return (\n                <div>\n                  <ListItem alignItems=\"flex-start\" key={index}>\n                    <ListItemAvatar>\n                      <Avatar alt=\"Remy Sharp\" src={`./images/${item.Image}`} />\n                    </ListItemAvatar>\n                    <ListItemText\n                      primary=\"Brunch this weekend?\"\n                      secondary={\n                        <React.Fragment>\n                          <Typography\n                            component=\"span\"\n                            variant=\"body2\"\n                            color=\"textPrimary\"\n                          >\n                            {`${item.SenderName}    `}\n                          </Typography>\n                          {item.Mesg}\n                        </React.Fragment>\n                      }\n                    />\n                  </ListItem>\n                </div>\n              );\n            }\n          })}\n        </List>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Mail from \"@material-ui/icons/Mail\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Inbox from \"./Components/Inbox\";\nimport Spam from \"./Components/Spam\";\nimport Important from \"./Components/Important\";\nimport Trash from \"./Components/Trash\";\nimport Star from \"@material-ui/icons/Star\";\nimport \"./App.css\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nexport default class App extends React.Component {\n  state = {\n    selectedPage: \"Inbox\",\n    status: false,\n    styleA: { height: 60, marginLeft: 160, display: \"flex\" },\n    emailData: [\n      {\n        SenderName: \"Ahmed\",\n        Mesg: \"Important Weather Advisory\",\n        Image: \"ahmed.png\",\n        status: \"Inbox\",\n        fevorate: false,\n        opened: false\n      },\n      {\n        SenderName: \"George\",\n        Mesg: \"Rock the color of the year\",\n        Image: \"george.png\",\n        status: \"Inbox\",\n        favorate: false,\n        opened: false\n      },\n      {\n        SenderName: \"Gillian\",\n        Mesg: \"Where to Drink Beer Right Now\",\n        Image: \"gillian.png\",\n        status: \"Inbox\",\n        fevorate: false,\n        opened: false\n      },\n      {\n        SenderName: \"Hania\",\n        Mesg: \"As you Wish\",\n        Image: \"hania.png\",\n        status: \"Inbox\",\n        fevorate: false,\n        opened: false\n      },\n      {\n        SenderName: \"Mariam\",\n        Mesg: \"*Don't Open This Email*\",\n        Image: \"mariam.png\",\n        status: \"Inbox\",\n        fevorate: false,\n        opened: false\n      },\n      {\n        SenderName: \"Robert\",\n        Mesg: \"Not Cool Guys\",\n        Image: \"robert.png\",\n        status: \"Inbox\",\n        fevorate: false,\n        opened: false\n      }\n    ]\n  };\n  handleFevorate = Index => {\n    const temp = this.state.emailData;\n    if (temp[Index].fevorate === true) {\n      temp[Index].fevorate = false;\n    } else {\n      temp[Index].fevorate = true;\n    }\n    console.log(temp[Index]);\n    this.setState({ emailData: temp });\n  };\n  handleOpenMail = Index => {\n    const temp = this.state.emailData;\n    temp[Index].opened = true;\n    this.setState({ emailData: temp });\n  };\n  handleRestore = Index => {\n    const temp = this.state.emailData;\n    temp[Index].status = \"Inbox\";\n    this.setState({ emailData: temp });\n  };\n\n  handleChanges = text => {\n    this.setState({ selectedPage: text });\n  };\n\n  handleDrawer = () => {\n    this.setState({ status: !this.state.status });\n  };\n\n  render() {\n    return (\n      <div>\n        <CssBaseline />\n        <AppBar>\n          <div style={this.state.styleA}>\n            <Toolbar>\n              <IconButton\n                color=\"inherit\"\n                aria-label=\"open drawer\"\n                onClick={this.handleDrawer}\n                edge=\"start\"\n              >\n                <MenuIcon />\n              </IconButton>\n              <Typography variant=\"h6\" noWrap>\n                Persistent drawer\n              </Typography>\n            </Toolbar>\n          </div>\n        </AppBar>\n        <nav aria-label=\"mailbox folders\">\n          <div>\n            <Divider />\n            <Drawer variant=\"permanent\" anchor=\"left\" open={this.state.status}>\n              <div />\n              <h2 style={{ textAlign: \"center\" }}>CP3170</h2>\n\n              <List style={{ height: 150 }}>\n                {[\"Inbox\", \"Trash\", \"Important\", \"Spam\"].map((text, index) => (\n                  <ListItem\n                    button\n                    key={index}\n                    onClick={() => this.handleChanges(text)}\n                    style={{ backgroundColor: \"darkgray\", padding: 20 }}\n                  >\n                    <ListItemIcon>\n                      {text === \"Inbox\" ? (\n                        <InboxIcon />\n                      ) : text === \"Trash\" ? (\n                        <DeleteIcon />\n                      ) : text === \"Important\" ? (\n                        <Star />\n                      ) : (\n                        <Mail />\n                      )}\n                    </ListItemIcon>\n                    <ListItemText primary={text} />\n                  </ListItem>\n                ))}\n                <Divider />\n              </List>\n            </Drawer>\n          </div>\n          <Divider />\n        </nav>\n        <main style={{ marginLeft: 160 }}>\n          <div style={{ marginTop: 80 }} />\n          {this.state.selectedPage === \"Inbox\" ? (\n            <Inbox\n              data={this.state.emailData}\n              fevorateEmail={this.handleFevorate}\n              openEmail={this.handleOpenMail}\n            />\n          ) : this.state.selectedPage === \"Trash\" ? (\n            <Trash\n              data={this.state.emailData}\n              restoreEmail={this.handleRestore}\n            />\n          ) : this.state.selectedPage === \"Important\" ? (\n            <Important data={this.state.emailData} />\n          ) : this.state.selectedPage === \"Spam\" ? (\n            <Spam />\n          ) : null}\n        </main>\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}